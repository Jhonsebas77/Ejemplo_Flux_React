{
  "_args": [
    [
      {
        "raw": "reflux-core@^1.0.0",
        "scope": null,
        "escapedName": "reflux-core",
        "name": "reflux-core",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Volumes/ARCHIVOS/Dropbox/Fruticola de Colombia/Desarrollos/ReactNative/Proyectos/Ejemplo_Flux_React/node_modules/reflux"
    ]
  ],
  "_from": "reflux-core@>=1.0.0 <2.0.0",
  "_id": "reflux-core@1.0.0",
  "_inCache": true,
  "_location": "/reflux-core",
  "_nodeVersion": "4.5.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/reflux-core-1.0.0.tgz_1484542451564_0.8858982066158205"
  },
  "_npmUser": {
    "name": "bryangrezeszak",
    "email": "bryangrezeszak@mail.com"
  },
  "_npmVersion": "3.8.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "reflux-core@^1.0.0",
    "scope": null,
    "escapedName": "reflux-core",
    "name": "reflux-core",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/reflux"
  ],
  "_resolved": "https://registry.npmjs.org/reflux-core/-/reflux-core-1.0.0.tgz",
  "_shasum": "eb9baae2d50871324adb9312583c12e070cd61d3",
  "_shrinkwrap": null,
  "_spec": "reflux-core@^1.0.0",
  "_where": "/Volumes/ARCHIVOS/Dropbox/Fruticola de Colombia/Desarrollos/ReactNative/Proyectos/Ejemplo_Flux_React/node_modules/reflux",
  "author": {
    "name": "Mikael Brassman"
  },
  "bugs": {
    "url": "http://github.com/reflux/reflux-core/issues"
  },
  "dependencies": {
    "eventemitter3": "^1.1.1"
  },
  "description": "A simple library for uni-directional dataflow application architecture inspired by ReactJS Flux",
  "devDependencies": {
    "babel-cli": "^6.1.18",
    "babel-core": "^6.1.4",
    "babel-eslint": "^4.0.5",
    "babel-polyfill": "^6.1.19",
    "babel-preset-es2015": "^6.1.4",
    "babelify": "^7.2.0",
    "benchmark": "^1.0.0",
    "browserify": "~10.2.3",
    "chai": "latest",
    "chai-as-promised": "latest",
    "es6-promise": "^2.3.0",
    "eslint": "^0.24.1",
    "eslint-watch": "^2.1.3",
    "husky": "^0.9.2",
    "jshint": "latest",
    "karma": "latest",
    "karma-browserify": "^4.0.0",
    "karma-commonjs": "latest",
    "karma-mocha": "latest",
    "karma-phantomjs-launcher": "latest",
    "karma-sauce-launcher": "latest",
    "karma-spec-reporter": "latest",
    "mocha": "latest",
    "parallelshell": "latest",
    "q": "^1.0.1",
    "replace": "^0.3.0",
    "rimraf": "^2.4.2",
    "sinon": "^1.10.3",
    "watch": "latest"
  },
  "directories": {},
  "dist": {
    "shasum": "eb9baae2d50871324adb9312583c12e070cd61d3",
    "tarball": "https://registry.npmjs.org/reflux-core/-/reflux-core-1.0.0.tgz"
  },
  "gitHead": "8977bdde408c79385b120ebabdd54e40c071c820",
  "homepage": "https://github.com/reflux/reflux-core#readme",
  "keywords": [
    "reflux",
    "flux",
    "architecture",
    "dataflow",
    "action",
    "events",
    "data"
  ],
  "license": "BSD-3-Clause",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "bryangrezeszak",
      "email": "bryangrezeszak@mail.com"
    },
    {
      "name": "devinivy",
      "email": "devin@bigroomstudios.com"
    },
    {
      "name": "spoike",
      "email": "mishakun+npm@gmail.com"
    }
  ],
  "name": "reflux-core",
  "optionalDependencies": {},
  "readme": "# reflux-core\r\n\r\nA simple core library for unidirectional dataflow architecture inspired by [Flux](http://facebook.github.io/react/blog/2014/05/06/flux.html). This module does not depend on React and may be used together with other view engine libraries.\r\n\r\n[![NPM Version][npm-image]][npm-url]\r\n[![NPM Downloads][downloads-image]][npm-url]\r\n[![Dependencies][dependencies-image]][npm-url]\r\n[![Build Status][travis-image]][travis-url]\r\n[![Gratipay][gratipay-image]][gratipay-url]\r\n\r\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/reflux-core.svg)](https://saucelabs.com/u/reflux-core)\r\n\r\nFor an overview of reflux with react extensions, look at the [refluxjs repository][refluxjs-url].\r\n\r\nHere are the [API docs](docs/api/Reflux.md) for reflux-core.\r\n\r\n## Installation\r\n\r\nYou can currently install the package as an npm package.\r\n\r\n### NPM\r\n\r\nThe following command installs `reflux-core` as an npm package:\r\n\r\n    npm install reflux-core\r\n\r\n### ES5\r\n\r\nReflux depends on ES5 features. For older browsers that are missing them you will need a shim such as `core-js/es5` from [core-js](https://github.com/zloirock/core-js#ecmascript-5) or `es5-shim.js` from [kriskowal's es5-shim](https://github.com/kriskowal/es5-shim).\r\n\r\n## Development\r\n\r\nYou need to have NodeJS installed.\r\n\r\n1. Clone this repository\r\n\r\n2. Run `npm install`\r\n\r\nYou can run the following npm scripts, for more check the project's `package.json` file.\r\n\r\n* `npm compile` Use babel to transpile the ES6 code to ES5, output is `/lib`.\r\n\r\n* `npm test` To run the jshint and tests\r\n\r\n* `npm run watch` To run the watch task. It will lint, compile and test the code whenever a file is saved.\r\n\r\n* `npm run benchmark` To run the benchmark test\r\n\r\n[Husky git hooks](https://github.com/typicode/husky) will prevent bad commits or bad pushes for you by linting and testing the code.\r\n\r\n## Extending `reflux-core`\r\n\r\n### As an add-on\r\n\r\nTo create an add-on for Reflux, you may do that by creating a callback that `Reflux#use` can handle.\r\n\r\n```javascript\r\n// addon.js\r\n\r\n// The callback recieves an instance of Reflux library that is being used.\r\nexport default function(Reflux) {\r\n\r\n    // add a simple function to Reflux\r\n    Reflux.createState = function() {\r\n        return {};\r\n    };\r\n\r\n}\r\n```\r\n\r\nThe user will have to do the following to use the add-on:\r\n\r\n```javascript\r\nimport Reflux from \"reflux-core\";\r\n    // or \"reflux\" or any other reflux with extensions\r\n\r\nimport createStateAddon from \"./addon.js\";\r\n\r\nReflux.use(createStateAddon);\r\n\r\nconsole.log(Reflux.createState());\r\n// outputs {}\r\n```\r\n\r\n* When publishing the plugin to npm, you don't need to have `reflux-core` or `reflux` as a dependency among `dependencies` in `package.json` as the user provides the version they use through the `Reflux#use` method.\r\n\r\n* If you're writing tests, you may want to use `reflux-core` and put it in `devDependencies` instead.\r\n\r\n* You may name your library `reflux-addon-{name}`.\r\n\r\n* Please do provide `reflux-addon` among `keywords` in `package.json` so that users can easily search for your addon in the npm registry.\r\n\r\n### As extensions for a view library\r\n\r\nInstall reflux-core as a dependency and publish it as a library to npm. Here is an example entry point:\r\n\r\n```javascript\r\n// index.js\r\nimport Reflux from \"reflux-core\";\r\nimport frameworkExtras from \"./framework-extras\";\r\n\r\nReflux.use(frameworkExtras); // like an add-on\r\n\r\nexport default Reflux; // export the amended Reflux lib\r\n```\r\n\r\n* You may name your library `reflux-{view library}`. E.g. if you're doing mixins for angular then it may be named `reflux-angular`.\r\n\r\n* Please do provide `reflux` among `keywords` in `package.json` so that users can easily search for your extensions in the npm registry.\r\n\r\n## Colophon\r\n\r\n[List of contributors](https://github.com/reflux/reflux-core/graphs/contributors) is available on Github.\r\n\r\nThis project is licensed under [BSD 3-Clause License](http://opensource.org/licenses/BSD-3-Clause). Copyright (c) 2014, Mikael Brassman.\r\n\r\nFor more information about the license for this particular project [read the LICENSE.md file](LICENSE.md).\r\n\r\nThis project uses [eventemitter3](https://github.com/3rd-Eden/EventEmitter3), is currently MIT licensed and [has it's license information here](https://github.com/3rd-Eden/EventEmitter3/blob/master/LICENSE).\r\n\r\n[npm-image]: http://img.shields.io/npm/v/reflux-core.svg\r\n[downloads-image]: http://img.shields.io/npm/dm/reflux-core.svg\r\n[dependencies-image]: http://img.shields.io/david/reflux/reflux-core.svg\r\n[npm-url]: https://www.npmjs.org/package/reflux-core\r\n[travis-image]: http://img.shields.io/travis/reflux/reflux-core/master.svg\r\n[travis-url]: https://travis-ci.org/reflux/reflux-core\r\n[gratipay-image]: http://img.shields.io/gratipay/spoike.svg\r\n[gratipay-url]: https://gratipay.com/spoike/\r\n[refluxjs-url]: https://github.com/reflux/refluxjs#refluxjs\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/reflux/reflux-core.git"
  },
  "scripts": {
    "benchmark": "node test/benchmarks",
    "build": "npm run lint && npm run compile && npm run test",
    "clean": "rimraf ./lib",
    "compile": "babel src --out-dir lib && node ./scripts/version",
    "lint": "esw",
    "precommit": "npm run lint && npm run test:mocha",
    "prepublish": "npm run lint && npm run test:mocha && npm run clean && npm run compile",
    "prepush": "npm run precommit",
    "test": "npm run test:mocha && npm run test:karma",
    "test:karma": "karma start test/config/karma.conf.js",
    "test:mocha": "mocha --compilers js:babel-core/register ./test",
    "test:travis": "karma start test/config/karma-travis.conf.js",
    "watch": "parallelshell 'npm run watch:test' 'npm run watch:lint'",
    "watch:lint": "esw -w",
    "watch:test": "mocha -w -R min --compilers js:babel-core/register ./test"
  },
  "version": "1.0.0"
}
